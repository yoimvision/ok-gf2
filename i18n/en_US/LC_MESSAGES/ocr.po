# Python i18n PO file for English to Chinese translation
# Generated from code analysis, focusing on 'match' parameter strings.
#
msgid ""
msgstr ""
"Project-Id-Version: PACKAGE VERSION\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-10-27 10:00+0000\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: zh_CN\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

# --- Previous Strings ---

msgid "^\d+天\d+小时"
msgstr "^\d+\s+[Dd]ays?\s+\d+\s+[Hh]ours?"

# Strings extracted from the 'pop_ups' list used in 'match' parameter
msgid "Click anywhere to exit"
msgstr "点击空白处关闭"

msgid "Tap anywhere on the screen to continue"
msgstr "点击屏幕任意位置继续"

msgid "Tap anywhere to continue"
msgstr "点击任意位置继续"

# From skip_dialogs: self.find_boxes(boxes, match=['跳过'])
msgid "Skip"
msgstr "跳过"

# From skip_dialogs: self.find_boxes(boxes, match='今日不再提示')
msgid "Do not remind me again today"
msgstr "今日不再提示"

# From skip_dialogs: self.click(self.find_boxes(boxes, match='确认'))
# From auto_battle: self.wait_click_ocr(match=['确认'], ...)
# From auto_battle: self.skip_dialogs(end_match=[..., '确认'], ...)
# From auto_battle: end_match.append('确认') -> self.wait_ocr(match=end_match, ...)
# From auto_battle: self.wait_click_ocr(match='确认', ...)
# From shopping: self.wait_click_ocr(match=['确认', '购买'], ...)
# From choose_chenyan: if self.ocr(box='bottom_right', match="确认"):
msgid "Confirm"
msgstr "确认"

# From auto_battle: self.skip_dialogs(end_match=['作战开始', '行动结束'], ...) -> used inside skip_dialogs
msgid "Combat Start"
msgstr "作战开始"

# From auto_battle: self.skip_dialogs(end_match=['作战开始', '行动结束'], ...) -> used inside skip_dialogs
# From auto_battle: self.wait_ocr(match=['行动结束', re.compile('还有可部署')], ...)
# From auto_battle: self.wait_ocr(match=['行动结束'], ...)
msgid "End Action"
msgstr "行动结束"

# From auto_battle: self.wait_ocr(match=['行动结束', re.compile('还有可部署')], ...)
# Note: This was inside re.compile, but the string itself is Chinese used in match param
msgid "还有可部署"
msgstr "Units can still be deployed"

# From auto_battle: self.skip_dialogs(end_match=['任务完成', ...], ...) -> used inside skip_dialogs
msgid "Mission Completed"
msgstr "任务完成"

# From auto_battle: self.skip_dialogs(end_match=[..., '任务失败', ...], ...) -> used inside skip_dialogs
msgid "Mission Failed"
msgstr "任务失败"

# From auto_battle: self.skip_dialogs(end_match=[..., '战斗失败', ...], ...) -> used inside skip_dialogs
msgid "Battle Failed"
msgstr "战斗失败"

# From auto_battle: self.skip_dialogs(end_match=[..., '对战胜利', ...], ...) -> used inside skip_dialogs
msgid "Victory"
msgstr "对战胜利"

# From auto_battle: self.skip_dialogs(end_match=[..., '对战失败', ...], ...) -> used inside skip_dialogs
msgid "Defeat"
msgstr "对战失败"

# From is_main: self.ocr(match=['整备室', '公共区', '招募'], ...)
msgid "Refitting Room"
msgstr "整备室"

# From is_main: self.ocr(match=['整备室', '公共区', '招募'], ...)
# From gongongqu: self.wait_click_ocr(match=['公共区'], ...)
msgid "Public Area"
msgstr "公共区"

# From is_main: self.ocr(match=['整备室', '公共区', '招募'], ...)
msgid "Recruitment"
msgstr "招募"

# From is_main: self.ocr(..., match=["点击开始", "点击空白处关闭", "取消"], ...)
msgid "Start"
msgstr "点击开始"

# From is_main: self.ocr(..., match=["点击开始", "点击空白处关闭", "取消"], ...)
# From fast_combat: find_boxes_by_name(boxes, ["确认", "取消", "上一步"])
msgid "Cancel"
msgstr "取消"

# From fast_combat: self.wait_click_ocr(match=['自律'], ...)
# From fast_combat: self.wait_ocr(match=['自律'], ...)
msgid "Auto"
msgstr "自律"

# --- New Strings from ClearMapTask ---

# From ClearMapTask: self.wait_ocr(box='right', match=["特殊奖励", '观看', '挑战'], ...)
msgid "Special Reward"
msgstr "特殊奖励"

# From ClearMapTask: self.wait_ocr(box='right', match=["特殊奖励", '观看', '挑战'], ...)
# From ClearMapTask: self.find_boxes(boxes, match=['观看', '挑战'])
msgid "Watch"
msgstr "观看"

# From ClearMapTask: self.wait_ocr(box='right', match=["特殊奖励", '观看', '挑战'], ...)
# From ClearMapTask: self.find_boxes(boxes, match=['观看', '挑战'])
# From challenge_arena_opponent: if not self.ocr(match=re.compile('挑战'), ...)
msgid "Challenge"
msgstr "挑战"

# --- New Strings from DailyTask ---

# From DailyTask default_config keys (used implicitly or for options)
msgid "Stamina Stage"
msgstr "体力本"

# From DailyTask default_config keys (used implicitly or for options)
msgid "Event Intel Supply"
msgstr "活动情报补给"

# From DailyTask default_config keys (used implicitly or for options)
msgid "Event Auto-Battle"
msgstr "活动自律"

# From DailyTask default_config keys (used implicitly or for options)
msgid "Purchase Free Gift Pack"
msgstr "购买免费礼包"

# From DailyTask default_config keys (used implicitly or for options)
msgid "Auto Farm Stamina"
msgstr "自动刷体力"

# From DailyTask default_config keys (used implicitly or for options)
msgid "Farm Money Stage"
msgstr "刷钱本"

# From DailyTask default_config keys (used implicitly or for options)
msgid "Arena"
msgstr "竞技场"

# From DailyTask default_config keys (used implicitly or for options)
msgid "War Chess Simulation"
msgstr "兵棋推演"

# From DailyTask default_config keys (used implicitly or for options)
msgid "Platoon"
msgstr "班组"

# From DailyTask default_config keys (used implicitly or for options)
msgid "Dust Smoke"
msgstr "尘烟"

# From DailyTask default_config keys (used implicitly or for options)
msgid "Claim Quests"
msgstr "领任务"

# From DailyTask default_config keys (used implicitly or for options)
msgid "Battle Pass"
msgstr "大月卡"

# From DailyTask default_config keys (used implicitly or for options)
msgid "Mail"
msgstr "邮件"

# From stamina_options (used in config and potentially match)
msgid "Equipment Analysis"
msgstr "军备解析"

# From stamina_options (used in config and potentially match)
msgid "In-Depth Search"
msgstr "深度搜索"

# From stamina_options (used in config and potentially match)
msgid "Cognitive"
msgstr "决策构象"

# From stamina_options (used in config and potentially match)
msgid "AR & SG"
msgstr "突击"

msgid "AR&SG"
msgstr "突击"

# From stamina_options (used in config and potentially match)
msgid "SMG & MG"
msgstr "冲锋"

msgid "SMG&MG"
msgstr "冲锋"

msgid "Next"
msgstr "下一步"

msgid "Back"
msgstr "上一步"

msgid "Click anywhere to continue"
msgstr "点击任意位置继续"

msgid "Clickanywhereto exit"
msgstr "点击空白处关闭"

msgid "RF&BLD"
msgstr "狙击"
# From stamina_options (used in config and potentially match)
msgid "RF & BLD"
msgstr "狙击"

# From stamina_options (used in config and potentially match)
msgid "HG"
msgstr "手枪"

# From activity_stamina: self.wait_click_ocr(match=['活动'], ...)
msgid "Event"
msgstr "活动"

# From activity_stamina: self.wait_click_ocr(match=['情报补给'], ...)
msgid "Intel Supply"
msgstr "情报补给"

# From activity_stamina: self.wait_click_ocr(match=['领取'], ...)
msgid "Claim"
msgstr "领取"

# From claim_quest: self.wait_click_ocr(match=['委托'], ...)
msgid "Commissions"
msgstr "委托"

# From claim_quest: self.ocr(match=['领取全部', '无可领取报酬', '已全部领取'], ...)
# From mail: self.wait_click_ocr(match=['领取全部'], ...)
# From guild: if result := self.wait_ocr(match=['领取全部'], ...)
msgid "Claim All"
msgstr "领取全部"

msgid "ClaimAll"
msgstr "领取全部"

# From claim_quest: self.ocr(match=['领取全部', '无可领取报酬', '已全部领取'], ...)
msgid "No Rewards Available"
msgstr "无可领取报酬"

# From claim_quest: self.ocr(match=['领取全部', '无可领取报酬', '已全部领取'], ...)
msgid "All Claimed"
msgstr "已全部领取"

msgid "AllClaimed"
msgstr "已全部领取"

# From xunlu: self.wait_click_ocr(match=['巡录'], ...)
msgid "Voyage"
msgstr "巡录"

# From xunlu: self.wait_click_ocr(match=['沿途行动'], ...)
msgid "Actions En Route"
msgstr "沿途行动"

# From activity: self.wait_click_ocr(match=['限时开启'], ...)
msgid "Time-Limited Events"
msgstr "限时开启"

# From activity: self.wait_ocr(match=['活动战役', re.compile('物资')], ...)
msgid "Event Campaign"
msgstr "活动战役"

# From activity: self.wait_ocr(match=['活动战役', re.compile('物资')], ...)
# From activity: if wuzi := self.ocr(match=re.compile('物资'), ...)
msgid "物资"
msgstr "Supplies"

# From gongongqu: self.wait_click_ocr(match=['调度室'], ...)
msgid "Dispatch Room"
msgstr "调度室"

# From gongongqu: self.wait_click_ocr(match=['调度收益'], ...)
msgid "Dispatch Income"
msgstr "调度收益"

# From gongongqu: self.wait_click_ocr(match=['取出'], ...)
msgid "Withdraw"
msgstr "取出"

# From gongongqu: self.wait_click_ocr(match=['资源生产'], ...)
msgid "Production"
msgstr "资源生产"

# From gongongqu: self.wait_click_ocr(match=['收取'], ...)
msgid "Collect"
msgstr "收取"

# From gongongqu: self.wait_click_ocr(match=['再次派遣'], ...)
# From text_fix: '再次派造': '再次派遣'
msgid "Dispatch Again"
msgstr "再次派遣"

# From shopping: self.wait_click_ocr(match=['商城'], ...)
msgid "Shop"
msgstr "商城"

# From shopping: self.wait_click_ocr(match=['品质甄选'], ...)
msgid "Quality"
msgstr "品质甄选"

# From shopping: self.wait_click_ocr(match=['周期礼包', '常驻礼包'], ...)
msgid "Periodic Pack"
msgstr "周期礼包"

# From shopping: self.wait_click_ocr(match=['周期礼包', '常驻礼包'], ...)
msgid "Standard Package"
msgstr "常驻礼包"

# From shopping: self.wait_click_ocr(match=['免费'], ...)
msgid "Free"
msgstr "免费"

# From arena: self.wait_click_ocr(match=['战役推进'], ...)
# From bingqi: self.wait_click_ocr(match=['战役推进'], ...)
# From battle: self.wait_click_ocr(match=['战役推进'], ...)
msgid "战役推进"
msgstr "Campaign"

# From arena: self.wait_click_ocr(match=['模拟作战'], ...)
# From bingqi: self.wait_click_ocr(match=['模拟作战'], ...)
msgid "Combat Simulations"
msgstr "模拟作战"

# From arena: self.wait_click_ocr(match=['实兵演习'], ...)
msgid "Combat Exercise"
msgstr "实兵演习"

# From arena: self.wait_click_ocr_with_pop_up("进攻", ...)
# From challenge_arena_opponent: self.wait_click_ocr(match=['进攻'], ...)
msgid "Attack"
msgstr "进攻"

# From arena: if not self.wait_ocr(match=['演习补给'], ...)
# msgid "Drill Supply" # Commented out as it's in a 'not' condition, maybe not primary target text
# msgstr "演习补给"

# From bingqi: self.wait_click_ocr(match=['兵棋推演'], ...)
# Already translated: msgid "War Chess Simulation" -> msgstr "兵棋推演"

# From bingqi: self.wait_ocr(match='防御阵容', ...)
msgid "Formation"
msgstr "防御阵容"

# From bingqi: self.wait_click_ocr(match=['匹配'], ...)
# From bingqi: self.auto_battle(end_match='匹配')
msgid "Match"
msgstr "匹配"

# From guild: self.wait_click_ocr(match=['班组'], ...)
# Already translated: msgid "Squad" -> msgstr "班组"

# From guild: self.wait_click_ocr(match=['要务'], ...)
# From guild: self.wait_ocr(match=['开始作战', '每日要务已完成', '要务'], ...)
msgid "Essential"
msgstr "要务"

# From guild: self.wait_ocr(match=['开始作战', '每日要务已完成'], ...)
# From guild: if result[0].name == '开始作战':
# From guild: self.wait_ocr(match=['开始作战', '每日要务已完成', '要务'], ...)
# From chenyan: self.wait_click_ocr(match='开始作战', ...)
# From auto_battle: self.auto_battle('开始作战', 'bottom_right')
msgid "Start Combat"
msgstr "开始作战"

# From guild: self.wait_ocr(match=['开始作战', '每日要务已完成'], ...)
# From guild: self.log_info('每日要务已完成')
# From guild: self.wait_ocr(match=['开始作战', '每日要务已完成', '要务'], ...)
msgid "Daily Patrol has been"
msgstr "每日要务已完成"

# From guild: self.wait_click_ocr(match=['补给'], ...)
msgid "Resupply"
msgstr "补给"

# From chenyan: self.wait_click_ocr(match='攻坚战', ...)
msgid "Assault Battle"
msgstr "攻坚战"

# From choose_chenyan: self.wait_click_ocr(match='助战', ...)
msgid "Support"
msgstr "助战"

# From choose_chenyan: self.wait_click_ocr(match='火力', ...)
msgid "Firepower"
msgstr "火力"

# From choose_chenyan: priority = ['可露凯', '妮基塔', '绛雨', '玛绮朵', '琼玖', '托洛洛'] (used for matching)
msgid "Chloe"
msgstr "可露凯"

# From choose_chenyan: priority = ['可露凯', '妮基塔', '绛雨', '玛绮朵', '琼玖', '托洛洛'] (used for matching)
msgid "Nikita"
msgstr "妮基塔"

# From choose_chenyan: priority = ['可露凯', '妮基塔', '绛雨', '玛绮朵', '琼玖', '托洛洛'] (used for matching)
msgid "Jiangyu"
msgstr "绛雨"

# From choose_chenyan: priority = ['可露凯', '妮基塔', '绛雨', '玛绮朵', '琼玖', '托洛洛'] (used for matching)
msgid "Maghilda"
msgstr "玛绮朵"

# From choose_chenyan: priority = ['可露凯', '妮基塔', '绛雨', '玛绮朵', '琼玖', '托洛洛'] (used for matching)
msgid "Qiongjiu"
msgstr "琼玖"

# From choose_chenyan: priority = ['可露凯', '妮基塔', '绛雨', '玛绮朵', '琼玖', '托洛洛'] (used for matching)
msgid "Trollope"
msgstr "托洛洛"

# From choose_chenyan: join = self.ocr(match='入队', ...)
msgid "Join Team"
msgstr "入队"

# From choose_chenyan: self.wait_click_ocr(match='确定', ...)
msgid "OK"
msgstr "确定"

# From challenge_arena_opponent: self.auto_battle(end_match='刷新')
# From challenge_arena_opponent: self.wait_click_ocr(match='刷新', ...)
msgid "Refresh"
msgstr "刷新"

# From challenge_arena_opponent: if self.ocr(match=['刷新消耗'], ...)
msgid "Expenditure"
msgstr "刷新消耗"

# From battle: self.wait_click_ocr(match=['补给作战'], ...)
msgid "Supply Missions"
msgstr "补给作战"

# From battle: self.wait_click_ocr(match=['标准同调'], ...)
msgid "Standardizing Sync"
msgstr "标准同调"

# From battle: target = '定向精研'
msgid "Targeted Study"
msgstr "定向精研"


